using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Runtime.InteropServices;
using LIFES.Authentication;

namespace LIFES.UserInterfaces
{
    /*
     * Class Name: LoginForm.cs
     * Author: Riley Smith
     * Date: 3/26/2015
     * Modified by: Riley Smith
     * 
     * Description: This is the driver class for the Login GUI Window.
     * 
     * Initially generated by Visual Studio GUI builder.
     */
    public partial class LoginForm : Form
    {
        //Constants Used for transition animations
        const int AW_SLIDE = 0X40000;
        const int AW_CENTER = 0x00000010;
        const int AW_HOR_POSITIVE = 0X1;
        const int AW_HOR_NEGATIVE = 0X2;
        const int AW_BLEND = 0X80000;

        [DllImport("user32")]
        static extern bool AnimateWindow(IntPtr hwnd, int time, int flags);

        Form callingForm;

        private bool isAdmin;
        ToolStripMenuItem adminMenu;
        private bool logedIn = false;

        public LoginForm(Form owner, ToolStripMenuItem admin )
        {
            InitializeComponent();
            callingForm = owner;
            adminMenu = admin;
        }

        private void LoginForm_Load(object sender, EventArgs e)
        {

        }

        /*
         * Method: OnLoad
         * Parameters: EventArgs e
         * Output: N/A
         * Created By: Riley Smith
         * Date: 3/30/2015
         * Modified By: Riley Smith
         * 
         * Override the function that loads the Form.
         * Animates the window as it opens.
         */
        protected override void OnLoad(EventArgs e)
        {
            AnimateWindow(this.Handle, 200, AW_CENTER | AW_HOR_POSITIVE);
        }

        /*
         * Method: Login
         * Parameters: object sender, EventArgs s
         * Output: N/A
         * Created By: Scott Smoke
         * Date: 4/12/2015
         * Modified By: JordanB Beck
         * 
         * Description: This will grab the username and password
         * from their respective text boxes and see if they are valid. 
         */ 
        private void Login(object sender, EventArgs e)
        {
            string userName = userNameTextBox.Text;
            string pwd = passwordTextBox.Text;
            UserList users = new UserList();

            //Added to reset the default admin, if he is locked out.
            if (userName == "HARDRESET")
            {
                users.ChangeFilePassword("AlanTuring", "06231912");
            }

            if (users.IsUser(userName))
            {
                if (!users.IsLocked(userName))
                {

                    if (users.TestPassword(userName, pwd))
                    {
                        isAdmin = users.IsAdmin(userName);
                        if (isAdmin)
                        {
                            adminMenu.Visible = true;
                            callingForm.Show();
                            logedIn = true;
                        }
                        else
                        {
                            callingForm.Show();
                            adminMenu.Visible = false;
                            logedIn = true;

                        }
                        Close();
                    }

                    else
                    {
                        MessageBox.Show("Incorrect Password");
                    }
                }
                else
                {
                    MessageBox.Show("User account is Locked");
                }
            }
            else
            {
                MessageBox.Show("Incorrect Username");
            }

        }

        public bool GetAdmin()
        {
            return isAdmin;
        }

        /*
         * Method: LoginForm_FormClosing
         * Parameters: object sender, FormClosingEventArgs e
         * Output : N/A
         * Created By: Scott Smoke
         * Date: 4/21/2015
         * Modified By: Scott Smoke
         * 
         * Description: This methode will close the main interface if the user has clicked
         * on the red x.
         */ 
        private void LoginForm_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (!logedIn)
            {
                callingForm.Close();
            }
            
            //this.Close();
        }

        /*
         * Method: PasswordTextBox_KeyDown
         * Paraneters: object sender, EventArgs e
         * Output: N/A
         * Created By: Riley Smith
         * Date: 4/22/2015
         * Modified By: Riley Smith
         * 
         * Description: If the user pressed the enter key while in the 
         *   password textbox, call the Login function. 
         * 
         */
        private void PasswordTextBox_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                Login(sender, e);
            }
        }
    }
}
