using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Runtime.InteropServices;
using LIFES.FileIO;
using LIFES;

namespace LIFES.UserInterfaces
{
    /*
     * Class Name: ViewTotalEnrollments.cs
     * Author: Riley Smith
     * Date: 4/8/2015
     * Modified by: Riley Smith
     * 
     * Description: This is the driver class for the View Total Enrollments GUI Window.
     * 
     * Initially generated by Visual Studio GUI builder.
     */
    public partial class ViewTotalEnrollmentsForm : Form
    {
        //Constants Used for transition animations
        const int AW_SLIDE = 0X40000;
        const int AW_CENTER = 0x00000010;
        const int AW_HOR_POSITIVE = 0X1;
        const int AW_HOR_NEGATIVE = 0X2;
        const int AW_BLEND = 0X80000;

        [DllImport("user32")]
        static extern bool AnimateWindow(IntPtr hwnd, int time, int flags);

        public ViewTotalEnrollmentsForm()
        {
            InitializeComponent();

            FillTable();
        }

        /*
         * Method: OnLoad
         * Parameters: EventArgs e
         * Output: N/A
         * Created By: Riley Smith
         * Date: 3/30/2015
         * Modified By: Riley Smith
         * 
         * Override the function that loads the Form.
         * Animates the window as it opens.
         */
        protected override void OnLoad(EventArgs e)
        {
            AnimateWindow(this.Handle, 200, AW_CENTER | AW_HOR_POSITIVE);
        }

        /*
         * Method: FillTable
         * Parameters: N/A
         * Output: N/A
         * Created By: Riley Smith
         * Date: 4/13/2015
         * Modified By: Riley Smith
         * 
         * Description: Fills the Users Table with a list of users.
         */
        private void FillTable()
        {
            if (Globals.totalEnrollemntsFileName != "" 
                && Globals.compressedTimes != null)
            {
                int linenumber = 0;
                foreach (CompressedClassTime ele in Globals.compressedTimes)
                {
                    string classTimes = "";

                    foreach (ClassTime time in ele.GetClassTimes())
                    {
                        classTimes += time.GetDayOfTheWeek() + " ";
                        classTimes += MilitaryToDateTime(time.GetClassStartTime()).
                            ToString("hh:mm tt") + "-";
                        classTimes += MilitaryToDateTime(time.GetClassEndTime()).
                            ToString("hh:mm tt") + "\n";
                    }

                    TimesGridView.Rows.Add();
                    TimesGridView.Rows[linenumber].Cells[0].Value = 
                        ele.GetDayOfTheWeek();
                    TimesGridView.Rows[linenumber].Cells[1].Value =
                        classTimes;
                    TimesGridView.Rows[linenumber].Cells[2].Value =
                        ele.GetTotalStudentsEnrolled();
                    linenumber++;
                }
            }
        }

        /*
         * Method: MilitaryToDateTime
         * Parameters: int (Military Time)
         * Output: DateTime
         * Created By: Riley Smith
         * Date: 5/3/2015
         * Modified By: Riley Smith
         * 
         * Description: Converts a MilitaryTime int to a standard DateTime.
         * 
         * Source:
         * http://forums.asp.net/t/1503263.aspx?How+to+convert+integer+representing+military+time+into+DateTime+object
         */        
        public static DateTime MilitaryToDateTime(int time)
        {
            int Hours = time / 100;
            int Minutes = time - Hours * 100;
            DateTime Result = DateTime.MinValue;


            Result = Result.AddHours(Hours);
            Result = Result.AddMinutes(Minutes);

            
            return Result;
        }

    }
}
